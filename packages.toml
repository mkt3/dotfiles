# xdg config
[xdg-utils]
type = "basic"
common = [{ name = "xdg-utils", method = "nix-hm" }]

# build package
[nix]
type = "basic"
common = [
  { name = "nix", method = "script", function = "setup_nix" },
  { name = "nix-index", method = "nix-hm" },
  { name = "nvfetcher", method = "nix-hm" },
]

[direnv]
type = "basic"
common = [{ name = "direnv", method = "nix-hm" }]

[gcc]
type = "basic"
nixos = [{ name = "gcc", method = "nix" }]

[gnumake]
type = "basic"
nixos = [{ name = "gnumake", method = "nix" }]

# CLI command packages
[bash]
type = "basic"
common = [{ name = "bash", method = "nix" }]

[zsh]
type = "basic"
arch = [{ name = "zsh", method = "pacman" }]
ubuntu = [{ name = "zsh", method = "apt" }]
common = [{ name = "zsh", method = "nix-hm" }]

[coreutils]
type = "basic"
arch = [{ name = "coreutils", method = "pacman" }]
darwin = [{ name = "coreutils", method = "nix-hm" }]
ubuntu = [{ name = "coreutils", method = "apt" }]
nixos = [{ name = "coreutils", method = "nix" }]

[findutils]
type = "basic"
common = [{ name = "findutils", method = "nix" }]

[grep]
type = "basic"
common = [{ name = "gnugrep", method = "nix" }]

[sed]
type = "basic"
common = [{ name = "gnused", method = "nix" }]

[gawk]
type = "basic"
common = [{ name = "gawk", method = "nix" }]

[less]
type = "basic"
common = [{ name = "less", method = "nix" }]

[tree]
type = "basic"
common = [{ name = "tree", method = "nix" }]

[rsync]
type = "basic"
common = [{ name = "rsync", method = "nix" }]

[yj]
type = "basic"
common = [{ name = "yj", method = "nix-hm" }]

[jq]
type = "basic"
common = [{ name = "jq", method = "nix-hm" }]

[fzf]
type = "basic"
common = [{ name = "fzf", method = "nix-hm" }]

[duf]
type = "basic"
common = [{ name = "duf", method = "nix-hm" }]

[fastfetch]
type = "basic"
common = [{ name = "fastfetch", method = "nix-hm" }]

[unarchiver]
type = "basic"
common = [{ name = "unar", method = "nix" }]

[trash-cli]
type = "basic"
common = [{ name = "trash-cli", method = "nix-hm" }]

[tmux]
type = "basic"
common = [
  { name = "tmux", method = "nix-hm" },
  { name = "tmux-mem-cpu-load", method = "nix-hm" },
]

[git]
type = "basic"
common = [
  { name = "git", method = "nix-hm" },
  { name = "git-secrets", method = "nix-hm" },
]

[sheldon]
type = "basic"
common = [{ name = "sheldon", method = "nix-hm" }]

[procs]
type = "basic"
common = [{ name = "procs", method = "nix-hm" }]

[bat]
type = "basic"
common = [{ name = "bat", method = "nix-hm" }]

[fd]
type = "basic"
common = [{ name = "fd", method = "nix-hm" }]

[ripgrep]
type = "basic"
common = [{ name = "ripgrep", method = "nix-hm" }]

[delta]
type = "basic"
common = [{ name = "delta", method = "nix-hm" }]

[lsd]
type = "basic"
common = [{ name = "lsd", method = "nix-hm" }]

[dust]
type = "basic"
common = [{ name = "dust", method = "nix-hm" }]

[csview]
type = "basic"
common = [{ name = "csview", method = "nix-hm" }]

[zoxide]
type = "basic"
common = [{ name = "zoxide", method = "nix-hm" }]

[navi]
type = "basic"
common = [{ name = "navi", method = "nix-hm" }]

[lazygit]
type = "basic"
common = [{ name = "lazygit", method = "nix-hm" }]

[taplo]
type = "basic"
common = [{ name = "taplo", method = "nix-hm" }]

[oxker]
type = "basic"
common = [{ name = "oxker", method = "nix-hm" }]

[ssh]
type = "basic"
common = [{ name = "ssh_config", method = "nix-hm" }]

## security
[openssl]
type = "basic"
arch = [{ name = "openssl", method = "pacman" }]
darwin = [{ name = "openssl_3_2", method = "nix-hm" }]
ubuntu = [{ name = "openssl", method = "apt" }]

[gnupg]
type = "basic"
arch = [{ name = "gnupg", method = "pacman" }]
ubuntu = [{ name = "gnupg", method = "apt" }]
common = [{ name = "gnupg", method = "nix-hm" }]

[macos-security]
type = "basic"
darwin = [
  { name = "pinentry_mac", method = "nix-hm" },
  { name = "pam-reattach", method = "nix-hm" },
]

## network
[iproute2mac]
type = "basic"
darwin = [{ name = "darwin.iproute2mac", method = "nix-hm" }]

## downloader
[wget]
type = "basic"
common = [{ name = "wget", method = "nix-hm" }]

[curl]
type = "basic"
common = [{ name = "curl", method = "nix-hm" }]

[aria2]
type = "basic"
common = [{ name = "aria", method = "nix-hm" }]

## top series
[htop]
type = "basic"
common = [{ name = "htop", method = "nix-hm" }]

[bottom]
type = "basic"
common = [{ name = "bottom", method = "nix-hm" }]

[iotop]
type = "basic"
linux = [{ name = "iotop", method = "nix-hm" }]

## Editor
[vim]
type = "basic"
common = [{ name = "vim", method = "nix-hm" }]

[emacs-basic]
type = "basic"
common = [
  { name = "emacs", method = "nix-hm" },
  { name = "hunspell", method = "nix" },
  { name = "hunspellDicts.en_US", method = "nix" },
  { name = "enchant", method = "nix-hm" },
  { name = "emacs-lsp-booster", method = "nix-hm" },
  { name = "pandoc", method = "nix-hm" },
]

[emacs-gui]
type = "gui"
linux = [
  { name = "isync", method = "nix-hm" },
  { name = "msmtp", method = "nix-hm" },
  { name = "mu", method = "nix-hm" },
  { name = "goimapnotify", method = "nix-hm" },
]
darwin = [
  { name = "pngpaste", method = "nix-hm" },
]

# repository management
[ghq]
type = "basic"
common = [{ name = "ghq", method = "nix-hm" }]

# development packages
## SSO
[saml2aws]
type = "dev"
darwin = [{ name = "saml2aws", method = "nix-hm" }]

## shell script
[shellcheck]
type = "dev"
common = [{ name = "shellcheck-minimal", method = "nix-hm" }]

## for nix
[nixd]
type = "dev"
common = [{ name = "nixd", method = "nix-hm" }]

[nixfmt-rfc-style]
type = "dev"
common = [{ name = "nixfmt-rfc-style", method = "nix-hm" }]

## python
[python]
type = "dev"
common = [{ name = "python", method = "nix-hm" }]

## for python
[ruff]
type = "dev"
common = [{ name = "ruff", method = "nix-hm" }]

[pyright]
type = "dev"
common = [{ name = "pyright", method = "nix-hm" }]

## mise
[mise]
type = "dev"
common = [{ name = "mise", method = "nix-hm" }]

### for python build
ubuntu = [
  { name = "build-essential", method = "apt" },
  { name = "libbz2-dev", method = "apt" },
  { name = "libdb-dev", method = "apt" },
  { name = "libreadline-dev", method = "apt" },
  { name = "libffi-dev", method = "apt" },
  { name = "libgdbm-dev", method = "apt" },
  { name = "liblzma-dev", method = "apt" },
  { name = "libncursesw5-dev", method = "apt" },
  { name = "libsqlite3-dev", method = "apt" },
  { name = "libssl-dev", method = "apt" },
  { name = "zlib1g-dev", method = "apt" },
  { name = "uuid-dev", method = "apt" },
]
darwin = [
  { name = "openssl", method = "brew" },
  { name = "readline", method = "brew" },
  { name = "sqlite3", method = "brew" },
  { name = "xz", method = "brew" },
  { name = "zlib", method = "brew" },
  { name = "tcl-tk", method = "brew" },
]

[uv]
type = "dev"
common = [{ name = "uv", method = "nix-hm" }]

## nodejs
[nodejs]
type = "dev"
common = [{ name = "npm", method = "nix-hm" }]

## for bash
[bash-language-server]
type = "dev"
common = [{ name = "bash-language-server", method = "nix-hm" }]

## for markdown eslint json
[vscode-langservers-extracted]
type = "dev"
common = [{ name = "vscode-langservers-extracted", method = "nix-hm" }]

## for typescript
[typescript-language-server]
type = "dev"
common = [{ name = "typescript-language-server", method = "nix-hm" }]

[typescript]
type = "dev"
common = [{ name = "typescript", method = "nix-hm" }]

## google cloud sdk
[google-cloud-sdk]
type = "dev"
darwin = [{ name = "google-cloud-sdk", method = "nix-hm" }]

## aws cli
[awscli2]
type = "dev"
darwin = [{ name = "awscli2", method = "nix-hm" }]

## config for docker
[docker-conf]
type = "dev"
linux = [{ name = "docker-conf", method = "nix-hm" }]

## kubernetes
[kubectl]
type = "dev"
common = [{ name = "kubectl", method = "nix-hm" }]

# gui packages
## tex
[latex]
type = "gui"
common = [{ name = "texliveMedium", method = "nix-hm" }]

## communication tools
[slack]
type = "gui"
common = [{ name = "slack", method = "nix-hm" }]

[discord]
type = "gui"
common = [{ name = "discord", method = "nix-hm" }]

[zoom]
type = "gui"
common = [{ name = "zoom-us", method = "nix-hm" }]

### macos only
[MeetingBar]
type = "gui"
darwin = [{ name = "meetingbar", method = "nix-hm" }]

## browser
[vivaldi]
type = "gui"
common = [{ name = "vivaldi", method = "nix-hm" }]

[firefox]
type = "gui"
linux = [{ name = "firefox", method = "nix-hm" }]
darwin = [{ name = "firefox", method = "cask" }]

## media
[vlc]
type = "gui"
common = [{ name = "vlc", method = "nix-hm" }]
linux = [
  { name = "libdvdread", method = "nix-hm" },
  { name = "libdvdnav", method = "nix-hm" },
  { name = "libdvdcss", method = "nix-hm" },
]

## research
[zotero]
type = "gui"
linux = [{ name = "zotero", method = "nix-hm" }]
darwin = [{ name = "zotero", method = "cask" }]

[anki]
type = "gui"
common = [{ name = "anki-bin", method = "nix-hm" }]

## terminal emulator
[wezterm]
type = "gui"
common = [{ name = "wezterm", method = "nix-hm" }]

## cloud storage
[nextcloud-client]
type = "gui"
darwin = [{ name = "nextcloud", method = "cask" }]
linux = [{ name = "nextcloud-client", method = "nix-hm" }]

[google-drive]
type = "gui"
darwin = [{ name = "google-drive", method = "cask" }]

## libreoffice
[libreoffice]
type = "gui"
linux = [{ name = "libreoffice-fresh", method = "nix-hm" }]
darwin = [{ name = "libreoffice-bin", method = "nix-hm" }]

## launcher
[launcher]
type = "gui"
darwin = [{ name = "raycast", method = "nix-hm" }]
linux = [{ name = "rofi-wayland", method = "nix-hm" }]

## external monitor control
[monitorcontrol]
type = "gui"
darwin = [{ name = "monitorcontrol", method = "nix-hm" }]

## window manager
[hyprland]
type = "gui"
nixos = [
  { name = "hyprland", method = "nix" },
  { name = "hyprland", method = "nix-hm" },
  { name = "xdg-desktop-portal-hyprland", method = "nix" },
  { name = "waybar", method = "nix-hm" },
  { name = "mako", method = "nix-hm" },
  { name = "networkmanagerapplet", method = "nix-hm" },
  { name = "hyprshot", method = "nix-hm" },
  { name = "playerctl", method = "nix-hm" },
  { name = "pwvucontrol", method = "nix-hm" },
  { name = "brightnessctl", method = "nix-hm" },
  { name = "gnome-keyring", method = "nix-hm" },
  { name = "libsecret", method = "nix-hm" },
  { name = "seahorse", method = "nix-hm" },
  { name = "nord", method = "nix-hm" },
]

[aerospace]
type = "gui"
darwin = [
  { name = "aerospace", method = "nix-hm" },
  { name = "jankyborders", method = "nix-hm" },
  { name = "sketchybar", method = "nix-hm" },
  { name = "aquaskk", method = "cask" },
  { name = "aquaskk", method = "nix-hm" },
]

## recoll
[recoll]
ptype = "gui"
darwin = [{ name = "recoll", method = "cask" }]
common = [{ name = "recoll", method = "nix-hm" }]

# hugo
[hugo]
type = "gui"
common = [{ name = "hugo", method = "nix-hm" }]

## gatsby
[gatsby-cli]
type = "gui"
linux = [{ name = "nodePackages.gatsby-cli", method = "nix-hm" }]

## font
[font]
type = "gui"
common = [{ name = "fonts", method = "nix-hm" }]

## key remapper
[keyremap]
type = "gui"
darwin = [
  { name = "karabiner-elements", method = "cask" },
  { name = "karabiner-elements", method = "nix-hm" },
]
nixos = [{ name = "xremap", method = "nix" }]

## dvd writing
[growisofs]
type = "gui"
common = [{ name = "dvdplusrwtools", method = "nix-hm" }]

## macos only
[utils]
type = "gui"
darwin = [
  { name = "appcleaner", method = "nix-hm" },
]

[WireGuard]
type = "gui"
darwin = [{ name = "\"WireGuard\" = 1451685025", method = "mas" }]

[darwin]
type = "gui"
darwin = [{ name = "macos", method = "nix-hm" }]
