# build package
[nix]
type = "basic"
common = [{ name = "nix", method = "script", function = "setup_nix" }]

[cmake]
type = "basic"
common = [{ name = "cmake", method = "nix" }]

# xdg config
[xdg_config]
type = "basic"
common = [{ name = "xdg_config", method = "script", function = "setup_xdg_config" }]

# CLI command packages
[zsh]
type = "basic"
arch = [{ name = "zsh", method = "pacman", function = "setup_zsh" }]
macos = [{ name = "zsh", method = "nix", function = "setup_zsh" }]
ubuntu = [{ name = "zsh", method = "apt", function = "setup_zsh" }]
nixos = [{ name = "zsh", method = "script", function = "setup_zsh" }]

[coreutils]
type = "basic"
arch = [{ name = "coreutils", method = "pacman" }]
macos = [{ name = "coreutils", method = "nix" }]
ubuntu = [{ name = "coreutils", method = "apt" }]

[fzf]
type = "basic"
common = [{ name = "fzf", method = "nix" }]

[findutils]
type = "basic"
common = [{ name = "findutils", method = "nix" }]

[grep]
type = "basic"
common = [{ name = "gnugrep", method = "nix" }]

[sed]
type = "basic"
common = [{ name = "gnused", method = "nix" }]

[gawk]
type = "basic"
common = [{ name = "gawk", method = "nix" }]

[less]
type = "basic"
common = [{ name = "less", method = "nix" }]

[yj]
type = "basic"
common = [{ name = "yj", method = "nix" }]

[jq]
type = "basic"
common = [{ name = "jq", method = "nix" }]

[tree]
type = "basic"
common = [{ name = "tree", method = "nix" }]

[duf]
type = "basic"
common = [{ name = "duf", method = "nix" }]

[neofetch]
type = "basic"
common = [{ name = "neofetch", method = "nix" }]

[unarchiver]
type = "basic"
common = [{ name = "unar", method = "nix" }]
macos = [{ name = "\"The Unarchiver\" = 425424353", method = "mas" }]

[rsync]
type = "basic"
common = [{ name = "rsync", method = "nix" }]

[trash-cli]
type = "basic"
common = [{ name = "trash-cli", method = "nix" }]

[tmux]
type = "basic"
common = [
  { name = "tmux", method = "nix", function = "setup_tmux" },
  { name = "tmux-mem-cpu-load", method = "nix" },
]

[git]
type = "basic"
common = [{ name = "git", method = "nix", function = "setup_git" }]

[sheldon]
type = "basic"
macos = [{ name = "sheldon@0.7.3", method = "cargo" }]
arch = [{ name = "sheldon", method = "nix" }]
ubuntu = [{ name = "sheldon", method = "nix" }]
nixos = [{ name = "sheldon", method = "nix" }]
otherlinux = [{ name = "sheldon", method = "nix" }]

[procs]
type = "basic"
common = [{ name = "procs", method = "nix" }]

[bat]
type = "basic"
common = [{ name = "bat", method = "nix" }]

[fd]
type = "basic"
common = [{ name = "fd", method = "nix" }]

[ripgrep]
type = "basic"
common = [{ name = "ripgrep", method = "nix", function = "setup_ripgrep" }]

[delta]
type = "basic"
common = [{ name = "delta", method = "nix" }]

[lsd]
type = "basic"
common = [{ name = "lsd", method = "nix" }]

[dust]
type = "basic"
common = [{ name = "dust", method = "nix" }]

[csview]
type = "basic"
common = [{ name = "csview", method = "nix" }]

[zoxide]
type = "basic"
common = [{ name = "zoxide", method = "nix" }]

[navi]
type = "basic"
common = [{ name = "navi", method = "nix", function = "setup_navi" }]

[lazygit]
type = "basic"
common = [{ name = "lazygit", method = "nix", function = "setup_lazygit" }]

[docker]
type = "basic"
common = [{ name = "docker", method = "script", function = "setup_docker" }]

## security
[openssl]
type = "basic"
arch = [{ name="openssl", method="pacman" }]
macos = [{ name = "openssl_3_2", method = "nix" }]
ubuntu = [{ name="openssl", method="apt"}]

[gnupg]
type = "basic"
arch = [{ name = "gnupg", method = "pacman", function = "setup_gpg" }]
ubuntu = [{ name = "gnupg", method = "apt", function = "setup_gpg" }]
macos = [{ name = "gnupg", method = "nix", function = "setup_gpg" }]

[macos-security]
type = "basic"
macos = [
  { name = "pinentry_mac", method = "nix" },
  { name = "pam-reattach", method = "nix" },
]

## network
[iproute2mac]
type = "basic"
macos = [{ name = "darwin.iproute2mac", method = "nix" }]

## downloader
[wget]
type = "basic"
common = [{ name = "wget", method = "nix" }]

[curl]
type = "basic"
common = [{ name = "curl", method = "nix" }]

[aria2]
type = "basic"
common = [{ name = "aria", method = "nix" }]

## top series
[htop]
type = "basic"
common = [{ name = "htop", method = "nix" }]

[iotop]
type = "basic"
arch = [{ name = "iotop", method = "nix" }]
ubuntu = [{ name = "iotop", method = "nix" }]
otherlinux = [{ name = "iotop", method = "nix" }]

# [nvtop]
# type = "dev"
# arch = [{ name = "nvtop", method = "nix" }]
# ubuntu = [{ name = "nvtop", method = "nix" }]

# Editor
[vim]
type = "basic"
common = [{ name = "vim", method = "nix", function = "setup_vim" }]

[emacs-basic]
type = "basic"
common = [
  { name = "emacs", method = "nix-program", function = "setup_emacs" },
  { name = "hunspell", method = "nix" },
  { name = "hunspellDicts.en-us", method = "nix" },
  { name = "enchant", method = "nix" },
  { name = "emacs-lsp-booster", method = "nix" },
]

[emacs-gui]
type = "gui"
common = [
  { name = "isync", method = "nix" },
  { name = "msmtp", method = "nix" },
  { name = "mu", method = "nix" },
  { name = "goimapnotify", method = "nix" },
]
macos = [{ name = "terminal-notifier", method = "nix" }]

# repository management
[ghq]
type = "basic"
common = [{ name = "ghq", method = "nix", function = "setup_ghq" }]

# development packages
## shell script
[shellcheck]
type = "dev"
common = [{ name = "shellcheck-minimal", method = "nix" }]

## python
[python]
type = "dev"
common = [{ name = "python311Full", method = "nix", function = "setup_python" }]

## for python
[ruff]
type = "dev"
common = [{ name = "ruff", method = "nix", function = "setup_ruff" }]

[pyright]
type = "dev"
common = [{ name = "nodePackages.pyright", method = "nix" }]

[uv]
type = "dev"
common = [{ name = "uv", method = "nix" }]

[poetry]
type = "dev"
common = [{ name = "poetry", method = "nix", function = "setup_poetry" }]

## mise
[mise]
type = "dev"
common = [{ name = "mise", method = "nix", function = "setup_mise" }]

## nodejs
[nodejs]
type = "dev"
common = [{ name = "npm", method = "script", function = "setup_npm" }]

## for bash
[bash-language-server]
type = "dev"
common = [{ name = "nodePackages.bash-language-server", method = "nix" }]

## for markdown eslint json
[vscode-langservers-extracted]
type = "dev"
common = [{ name = "nodePackages.vscode-langservers-extracted", method = "nix" }]

## for typescript
[typescript-language-server]
type = "dev"
common = [{ name = "nodePackages.typescript-language-server", method = "nix" }]

[typescript]
type = "dev"
common = [{ name = "typescript", method = "nix" }]

## google cloud sdk
[google-cloud-sdk]
type = "dev"
common = [{ name = "google-cloud-sdk", method = "nix" }]

# gui packages
## tex
[latex]
type = "gui"
common = [{ name = "texliveMedium", method = "nix" }]

## communication tools
[slack]
type = "gui"
common = [{ name = "slack", method = "nix" }]

[discord]
type = "gui"
common = [{ name = "discord", method = "nix" }]

[zoom]
type = "gui"
common = [{ name = "zoom-us", method = "nix" }]

[MeetingBar]
type = "gui"
macos = [{ name = "\"MeetingBar\" = 1532419400", method = "mas" }]

## browser
[vivaldi]
type = "gui"
arch = [
  { name = "vivaldi", method = "nix" },
  { name = "vivaldi-ffmpeg-codecs", method = "nix" },
]
macos = [{ name = "vivaldi", method = "cask" }]

[firefox]
type = "gui"
arch = [{ name = "firefox", method = "nix" }]
macos = [{ name = "firefox", method = "cask" }]

## media
[vlc]
type = "gui"
arch = [
  { name = "vlc", method = "nix" },
  { name = "libdvdread", method = "nix" },
  { name = "libdvdnav", method = "nix" },
  { name = "libdvdcss", method = "nix" },
]
macos = [{ name = "vlc", method = "cask" }]

## research
[zotero]
type = "gui"
arch = [{ name = "zotero", method = "nix" }]
macos = [{ name = "zotero", method = "cask" }]

[anki]
type = "gui"
common = [{ name = "anki-bin", method = "nix" }]

## password manager
[bitwarden]
type = "gui"
arch = [{ name = "bitwarden", method = "pacman" }]
macos = [{ name = "\"Bitwarden\" = 1352778147", method = "mas" }]

## terminal emulator
[wezterm]
type = "gui"
arch = [{ name = "wezterm", method = "pacman", function = "setup_wezterm" }]
macos = [{ name = "wezterm", method = "cask", function = "setup_wezterm" }]

## cloud storage
[nextcloud-client]
type = "gui"
arch = [{ name = "nextcloud-client", method = "pacman" }]
macos = [{ name = "nextcloud", method = "cask" }]

[google-drive]
type = "gui"
macos = [{ name = "google-drive", method = "cask" }]

## libreoffice
[libreoffice]
type = "gui"
arch = [{ name = "libreoffice-fresh", method = "nix" }]
macos = [{ name = "libreoffice-bin", method = "nix" }]

## launcher
[raycast]
type = "gui"
macos = [{ name = "raycast", method = "nix" }]

[rofi]
type = "gui"
arch = [{ name = "rofi-lbonn-wayland-git", method = "aur", function = "setup_rofi" }]

## external monitor control
[monitorcontrol]
type = "gui"
macos = [{ name = "monitorcontrol", method = "nix" }]
arch = [{ name = "ddcci-driver-linux-dkms", method = "aur" }]

## window manager
[sway]
type = "gui"
arch = [
  { name = "sway", method = "pacman", function = "setup_sway" },
  { name = "xorg-xwayland", method = "pacman" },
  { name = "qt5-wayland", method = "pacman" },
  { name = "qt6-wayland", method = "pacman" },
  { name = "swayidle", method = "pacman" },
  { name = "swaylock", method = "pacman", function = "setup_swaylock" },
  { name = "swaybg", method = "pacman" },
  { name = "xdg-desktop-portal-wlr", method = "pacman" },
  { name = "xdg-desktop-portal", method = "pacman" },
  { name = "waybar", method = "pacman", function = "setup_waybar" },
  { name = "wl-clipboard", method = "pacman" },
  { name = "mako", method = "pacman", function = "setup_mako" },
  { name = "lightdm", method = "pacman" },
  { name = "lightdm-gtk-greeter", method = "pacman" },
  { name = "network-manager-applet", method = "pacman" },
  { name = "papirus-icon-theme", method = "pacman" },
  { name = "bluez", method = "pacman" },
  { name = "bluez-utils", method = "pacman" },
  { name = "blueman", method = "pacman" },
  { name = "pipewire", method = "pacman" },
  { name = "wireplumber", method = "pacman" },
  { name = "pipewire-alsa", method = "pacman" },
  { name = "pipewire-pulse", method = "pacman" },
  { name = "pavucontrol", method = "pacman" },
  { name = "playerctl", method = "pacman" },
  { name = "thunar", method = "pacman" },
  { name = "tumbler", method = "pacman" },
  { name = "gvfs", method = "pacman" },
  { name = "gvfs-smb", method = "pacman" },
  { name = "sshfs", method = "pacman" },
  { name = "ristretto", method = "pacman" },
  { name = "slurp", method = "pacman" },
  { name = "grim", method = "pacman" },
  { name = "kanshi", method = "pacman", function = "setup_kanshi" },
  { name = "qtkeychain-qt5", method = "pacman" },
  { name = "libsecret", method = "pacman" },
  { name = "gnome-keyring", method = "pacman" },
  { name = "seahorse", method = "pacman" },
  { name = "gtk2", method = "pacman" },
  { name = "autotiling-rs", method = "pacman" },
  { name = "python-i3ipc", method = "pacman" }, # for inactive-windows-transparency.py
  { name = "noto-fonts", method = "pacman", function = "setup_noto_font" },
  { name = "noto-fonts-cjk", method = "pacman" },
  { name = "noto-fonts-emoji", method = "pacman" },
  { name = "noto-fonts-extra", method = "pacman" },
  { name = "ttf-font-awesome", method = "pacman" },
  { name = "acpi", method = "pacman" },
  { name = "fcitx5", method = "pacman" },
  { name = "fcitx5-configtool", method = "pacman" },
  { name = "fcitx5-gtk", method = "pacman" },
  { name = "fcitx5-qt", method = "pacman" },
  { name = "fcitx5-skk", method = "pacman" },
  { name = "clipman", method = "aur" },
  { name = "nwg-look", method = "aur" },
  { name = "nordic-theme", method = "aur" },
  { name = "xwindow", method = "script", function = "setup_xwindow" },

]

[yabai]
type = "gui"
macos = [
  { name = "koekeishiya/formulae/yabai", method = "brew", function = "setup_yabai" },
  { name = "koekeishiya/formulae/skhd", method = "brew", function = "setup_skhd" },
  { name = "FelixKratz/formulae/sketchybar", method = "brew", function = "setup_sketchybar" },
  { name = "font-hack-nerd-font", method = "cask" },
  { name = "font-cica", method = "cask" },
  { name = "font-plemol-jp-nf", method = "cask" },
  { name = "aquaskk", method = "cask", function = "setup_aquaskk" },
]

[skk-dict]
type = "gui"
common = [{ name = "skk", method = "script", function = "setup_skk" }]

## recoll
[recoll]
type = "gui"
common = [{ name = "recoll", method = "nix", function = "setup_recoll" }]

## hugo
[hugo]
type = "gui"
common = [{ name = "hugo", method = "nix" }]

## gatsby
[gatsby-cli]
type = "gui"
common = [{ name = "nodePackages.gatsby-cli", method = "nix" }]

## programing font
[programing_font]
type = "gui"
arch = [{ name = "programing_font", method = "script", function = "setup_prograing_font" }]

## key remapper
[keyremap]
type = "gui"
macos = [{ name = "karabiner-elements", method = "nix", function = "setup_karabiner" }]
arch = [{ name = "xremap --features wlroots", method = "cargo", function = "setup_xremap" }]

## backup tools
[borg]
type = "gui"
arch = [{ name = "borgbackup", method = "nix", function = "setup_borg" }]

## dvd writing
[growisofs]
type = "gui"
common = [{ name = "dvdplusrwtools", method = "nix" }]

## textlint
# [textlint]
# type = "gui"
# arch = [
#   { name = "nodePackages.textlint", method = "npm", function = "setup_textlint" },
#   { name = "nodePackages.textlint-plugin-org", method = "npm" },
#   { name = "nodePackages.textlint-rule-preset-ja-technical-writing", method = "npm" },
#   { name = "nodePackages.textlint-rule-preset-ja-spacing", method = "npm" },
#   { name = "nodePackages.textlint-rule-alex", method = "npm" },
#   { name = "nodePackages.textlint-rule-en-capitalization", method = "npm" },
#   { name = "textlint-rule-common-misspellings", method = "npm" },
#   { name = "textlint-rule-write-good", method = "npm" },
# ]
# macos = [
#   { name = "textlint", method = "npm", function = "setup_textlint" },
#   { name = "textlint-plugin-org", method = "npm" },
#   { name = "textlint-rule-preset-ja-technical-writing", method = "npm" },
#   { name = "textlint-rule-preset-ja-spacing", method = "npm" },
#   { name = "textlint-rule-alex", method = "npm" },
#   { name = "textlint-rule-en-capitalization", method = "npm" },
#   { name = "textlint-rule-common-misspellings", method = "npm" },
#   { name = "textlint-rule-write-good", method = "npm" },
# ]

## macos only
[utils]
type = "gui"
macos = [
  { name = "stats", method = "nix" },
  { name = "appcleaner", method = "nix" },
]

[WireGuard]
type = "gui"
macos = [{ name = "\"WireGuard\" = 1451685025", method = "mas" }]

[macos]
type = "gui"
macos = [{ name = "macos", method = "script", function = "setup_macos" }]
